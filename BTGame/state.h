/***********************************************************************
   WARNING: This file generated by robots.  Do not attempt to modify.

   This API is for use with state.db
   Which contains 1 table(s).
***********************************************************************/

#pragma once

#include "segautils/Defs.h"
#include "segautils/String.h"

typedef struct sqlite3_stmt sqlite3_stmt;
typedef struct lua_State lua_State;
typedef struct DB_state DB_state;

DB_state *db_stateCreate();
void db_stateDestroy(DB_state *self);
int db_stateCreateTables(DB_state *self);

typedef struct {
   String *id;
} DBActor;

#define VectorTPart DBActor
#include "segautils/Vector_Decl.h"

void dbActorDestroy(DBActor *self); //this does not call free on self!!
int dbActorInsert(DB_state *db, const DBActor *obj);
int dbActorUpdate(DB_state *db, const DBActor *obj); //will base on primary key
vec(DBActor) *dbActorSelectAll(DB_state *db);
DBActor dbActorSelectFirstByid(DB_state *db, const char *id);
int dbActorDeleteAll(DB_state *db);
int dbActorDeleteByid(DB_state *db, const char *id);

